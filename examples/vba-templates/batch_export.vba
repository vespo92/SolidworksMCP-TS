' Batch Export Template
' Generated by SolidWorks MCP Server
' Format: {{format}}
' Source: {{sourcePath}}
' Destination: {{destinationPath}}

Sub BatchExport()
    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim fso As Object
    Dim folder As Object
    Dim file As Object
    Dim sourcePath As String
    Dim destPath As String
    Dim exportPath As String
    Dim errors As Long
    Dim warnings As Long
    Dim exportCount As Integer
    Dim filePattern As String
    
    Set swApp = Application.SldWorks
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    sourcePath = "{{sourcePath}}"
    destPath = "{{destinationPath}}"
    filePattern = "{{filePattern}}"
    
    ' Validate paths
    If Not fso.FolderExists(sourcePath) Then
        MsgBox "Source folder does not exist: " & sourcePath
        Exit Sub
    End If
    
    ' Create destination folder if it doesn't exist
    If Not fso.FolderExists(destPath) Then
        fso.CreateFolder destPath
    End If
    
    Set folder = fso.GetFolder(sourcePath)
    exportCount = 0
    
    ' Process each file in the source folder
    For Each file In folder.Files
        ' Check if file matches pattern
        If file.Name Like "*.sld*" Then
            ' Open the file
            Set swModel = swApp.OpenDoc6( _
                file.Path, _
                GetDocumentType(file.Path), _
                swOpenDocOptions_e.swOpenDocOptions_Silent, _
                "", errors, warnings)
            
            If Not swModel Is Nothing Then
                ' Create export path with new extension
                exportPath = destPath & "\" & _
                    fso.GetBaseName(file.Name) & ".{{format}}"
                
                ' Export based on format
                {{#if (eq format "step")}}
                ' Export as STEP
                swModel.Extension.SaveAs exportPath, 0, 1, Nothing, errors, warnings
                {{/if}}
                
                {{#if (eq format "iges")}}
                ' Export as IGES
                swModel.SaveAs3 exportPath, 0, 1
                {{/if}}
                
                {{#if (eq format "stl")}}
                ' Export as STL
                swModel.SaveAs3 exportPath, 0, 1
                {{/if}}
                
                {{#if (eq format "pdf")}}
                ' Export as PDF (for drawings)
                If GetDocumentType(file.Path) = swDocumentTypes_e.swDocDRAWING Then
                    swModel.SaveAs3 exportPath, 0, 1
                End If
                {{/if}}
                
                {{#if (eq format "dxf")}}
                ' Export as DXF (for drawings)
                If GetDocumentType(file.Path) = swDocumentTypes_e.swDocDRAWING Then
                    swModel.SaveAs3 exportPath, 0, 1
                End If
                {{/if}}
                
                {{#if (eq format "dwg")}}
                ' Export as DWG (for drawings)
                If GetDocumentType(file.Path) = swDocumentTypes_e.swDocDRAWING Then
                    swModel.SaveAs3 exportPath, 0, 1
                End If
                {{/if}}
                
                exportCount = exportCount + 1
                Debug.Print "Exported: " & file.Name & " to " & exportPath
                
                ' Close the file
                swApp.CloseDoc swModel.GetTitle
            End If
        End If
    Next file
    
    MsgBox "Export complete!" & vbCrLf & _
           "Exported " & exportCount & " files to {{format}} format" & vbCrLf & _
           "Destination: " & destPath
End Sub

Function GetDocumentType(filePath As String) As Integer
    Dim ext As String
    ext = LCase(Right(filePath, 6))
    
    If InStr(ext, "sldprt") > 0 Then
        GetDocumentType = swDocumentTypes_e.swDocPART
    ElseIf InStr(ext, "sldasm") > 0 Then
        GetDocumentType = swDocumentTypes_e.swDocASSEMBLY
    ElseIf InStr(ext, "slddrw") > 0 Then
        GetDocumentType = swDocumentTypes_e.swDocDRAWING
    Else
        GetDocumentType = swDocumentTypes_e.swDocNONE
    End If
End Function