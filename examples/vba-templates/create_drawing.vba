' Create Drawing Template
' Generated by SolidWorks MCP Server

Sub CreateDrawingFromModel()
    Dim swApp As SldWorks.SldWorks
    Dim swModel As SldWorks.ModelDoc2
    Dim swDraw As SldWorks.DrawingDoc
    Dim swSheet As SldWorks.Sheet
    Dim swView As SldWorks.View
    Dim lErrors As Long
    Dim lWarnings As Long
    Dim dScale As Double
    
    Set swApp = Application.SldWorks
    
    ' Open the 3D model
    Set swModel = swApp.OpenDoc6("{{modelPath}}", _
        GetDocType("{{modelPath}}"), _
        swOpenDocOptions_Silent, "", lErrors, lWarnings)
    
    If swModel Is Nothing Then
        MsgBox "Failed to open model: {{modelPath}}"
        Exit Sub
    End If
    
    ' Create new drawing
    Set swDraw = swApp.NewDocument("{{drawingTemplate}}", _
        GetPaperSize("{{sheetSize}}"), 0.21, 0.297)
    
    If swDraw Is Nothing Then
        MsgBox "Failed to create drawing"
        Exit Sub
    End If
    
    Set swSheet = swDraw.GetCurrentSheet
    swSheet.SetName "Sheet1"
    swSheet.SetScale 1, 2, False, False ' 1:2 scale
    
    ' Add views
    {{#each views}}
    {{#if (eq this "front")}}
    ' Add front view
    Set swView = swDraw.CreateDrawViewFromModelView3( _
        "{{../modelPath}}", "*Front", 0.105, 0.148, 0)
    {{/if}}
    {{#if (eq this "top")}}
    ' Add top view
    Set swView = swDraw.CreateDrawViewFromModelView3( _
        "{{../modelPath}}", "*Top", 0.105, 0.22, 0)
    {{/if}}
    {{#if (eq this "right")}}
    ' Add right view
    Set swView = swDraw.CreateDrawViewFromModelView3( _
        "{{../modelPath}}", "*Right", 0.18, 0.148, 0)
    {{/if}}
    {{#if (eq this "iso")}}
    ' Add isometric view
    Set swView = swDraw.CreateDrawViewFromModelView3( _
        "{{../modelPath}}", "*Isometric", 0.18, 0.22, 0)
    {{/if}}
    {{/each}}
    
    ' Update sheet format
    swDraw.ForceRebuild3 False
    
    MsgBox "Drawing created successfully with {{views.length}} views"
End Sub

Function GetPaperSize(sSize As String) As Long
    Select Case UCase(sSize)
        Case "A4": GetPaperSize = swDwgPaperA4size
        Case "A3": GetPaperSize = swDwgPaperA3size
        Case "A2": GetPaperSize = swDwgPaperA2size
        Case "A1": GetPaperSize = swDwgPaperA1size
        Case "A0": GetPaperSize = swDwgPaperA0size
        Case Else: GetPaperSize = swDwgPaperA4size
    End Select
End Function

Function GetDocType(sFile As String) As Long
    Dim sExt As String
    sExt = LCase(Right(sFile, 6))
    
    If InStr(sExt, "sldprt") > 0 Then
        GetDocType = swDocPART
    ElseIf InStr(sExt, "sldasm") > 0 Then
        GetDocType = swDocASSEMBLY
    Else
        GetDocType = swDocPART
    End If
End Function